#!/usr/bin/env ruby
require_relative "lib/ui"
require_relative "lib/commandline"

$: << File.join(File.dirname(__FILE__), "..", "..", "lib")
require "rubpubsub/adapter"

case CommandLine.command
when "server"
  begin
    require "bundler/setup"
    require "rubpubsub"

    adapter = ENV["REDISTOGO_URL"] || "redis://localhost:6379/"
    rubpubsub = RubPubSub.new(:adapter => adapter)

    Rack::Server.start :app => rubpubsub.app,
      :environment => :deployment,
      :server => 'thin',
      :Port => CommandLine.options[:port]
  end

when "listen"
  begin
    channel = ARGV.shift || Trollop.die("Missing channel parameter")

    adapter = RubPubSub::Adapter.rubpubsub CommandLine.url
    adapter.subscribe channel do |event, data, id|
      puts "# message-id: #{id}"
      puts data
    end
  end
  
when "publish"
  begin
    channel = ARGV.shift || Trollop.die("Missing channel parameter")
    Trollop.die("Missing message") unless ARGV.first

    # read data; if there is a single "-" argument read from stdin
    msg = ARGV.join(" ")
    msg = STDIN.read if msg == "-"

    # Push the message.
    id = B "#{channel}: pushing message" do
      adapter = RubPubSub::Adapter.rubpubsub CommandLine.url
      adapter.publish channel, msg
    end
    S "published message", id
  end
end

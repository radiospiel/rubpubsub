#!/usr/bin/env ruby
require_relative "lib/ui"
require_relative "lib/commandline"

case CommandLine.command
when "server"
  begin
    $: << File.join(File.dirname(__FILE__), "..", "..", "lib")
    require "bundler/setup"
    require "rubpubsub"

    adapter = ENV["REDISTOGO_URL"] || "redis://localhost:6379/"
    rubpubsub = RubPubSub.new(:adapter => adapter)

    Rack::Server.start :app => rubpubsub.app,
      :environment => :deployment,
      :server => 'thin',
      :Port => CommandLine.options[:port]
  end

when "listen"
  begin
    channel = ARGV.shift || Trollop.die("Missing channel parameter")
    uri = CommandLine.uri(channel)

    require "net/http"
    W "#{uri}: connecting"

    Net::HTTP.start(uri.host, uri.port) do |http|
      request = Net::HTTP::Get.new uri.request_uri

      http.request request do |response|
        response.read_body do |chunk|
          W chunk
        end
      end
    end
  end
  
when "push"
  begin
    channel = ARGV.shift || Trollop.die("Missing channel parameter")
    Trollop.die("Missing message") unless ARGV.first
    uri = CommandLine.uri(channel)

    require "net/http"
    B "pushing message to #{uri}" do
      response = Net::HTTP.post_form uri, msg: ARGV.join(" ")
      body = response.read_body
      W "#{response.code} #{response.message}", body
    end
  end
end
